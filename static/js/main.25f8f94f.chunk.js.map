{"version":3,"sources":["components/Loader.js","components/Result.js","components/Form.js","cockpit/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","CircularIndeterminate","classes","className","CircularProgress","color","Result","props","totalAmount","Number","amount","tip","amountPerPerson","people","backgroundColor","outerDiv","flexDirection","justifyContent","alignItems","height","input","margin","form","Form","useState","setAmount","setPeople","setTip","disabled","setDisabled","isLoading","setisLoading","result","setresult","useEffect","setTimeout","TextField","id","type","label","value","onChange","e","target","Button","variant","onClick","Calculate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACT,YAAa,CACTC,WAAYH,EAAMI,QAAQ,SAKvB,SAASC,IACpB,IAAMC,EAAUR,IAEhB,OACI,qBAAKS,UAAWD,EAAQL,KAAxB,SACI,cAACO,EAAA,EAAD,CAAkBC,MAAM,gBChBrB,SAASC,EAAOC,GAE3B,IAAIC,EAAcC,OAAOF,EAAMG,QAAUD,OAAOF,EAAMI,KAClDC,EAAkBJ,EAAcC,OAAOF,EAAMM,QAGjD,OACI,iDACmBL,EAAY,uBAAS,uBADxC,qBAEuBI,KCL/B,IAAMlB,EAAYC,YAAW,CACzBE,KAAM,CACFiB,gBAAiB,MACjBT,MAAO,SAAAE,GAAK,OAAIA,EAAMF,QAE1BU,SAAU,CACNjB,QAAS,OACTkB,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZC,OAAQ,QAEZC,MAAO,CACHC,OAAQ,YAEZC,KAAM,KA4EKC,EAtEF,WACT,IAAMrB,EAAUR,IADD,EAEa8B,mBAAS,GAFtB,mBAERd,EAFQ,KAEAe,EAFA,OAGaD,mBAAS,GAHtB,mBAGRX,EAHQ,KAGAa,EAHA,OAIOF,mBAAS,GAJhB,mBAIRb,EAJQ,KAIHgB,EAJG,OAKiBH,oBAAS,GAL1B,mBAKRI,EALQ,KAKEC,EALF,OAMmBL,oBAAS,GAN5B,mBAMRM,EANQ,KAMGC,EANH,OAOaP,mBAAS,MAPtB,mBAORQ,EAPQ,KAOAC,EAPA,KAgCf,OAdAC,qBAAU,WACNC,YAAW,WACPJ,GAAa,KACd,OACJ,CAACD,IAEJI,qBAAU,WAEFL,IADAhB,EAAS,GAAKH,EAAS,MAK5B,CAACA,EAAQG,IAGR,sBAAKV,UAAWD,EAAQa,SAAxB,UACI,gDACA,uBAAMZ,UAAWD,EAAQoB,KAAzB,UACI,cAACc,EAAA,EAAD,CACIC,GAAG,SACHC,KAAK,SACLC,MAAM,cACNC,MAAO9B,EACPP,UAAWD,EAAQkB,MACnBqB,SAAU,SAACC,GAAD,OAAOjB,EAAUiB,EAAEC,OAAOH,UAExC,cAACJ,EAAA,EAAD,CACIC,GAAG,SACHC,KAAK,SACLnC,UAAWD,EAAQkB,MACnBmB,MAAM,mBACNC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAOhB,EAAUgB,EAAEC,OAAOH,UAGxC,cAACJ,EAAA,EAAD,CACIC,GAAG,MACHlC,UAAWD,EAAQkB,MACnBmB,MAAM,aACNC,MAAO7B,EACP8B,SAAU,SAACC,GAAQf,EAAOe,EAAEC,OAAOH,UAGvC,cAACI,EAAA,EAAD,CAAQhB,SAAUA,EAAUiB,QAAQ,YAAYxC,MAAM,UAAUyC,QAAS,kBApDnE,SAACpC,EAAQG,GACvBkB,GAAa,GACbE,EAAU,cAAC3B,EAAD,CACNI,OAAQA,EACRC,IAAKA,EACLE,OAAQA,KA+C2EkC,CAAUrC,EAAQG,IAAjG,0BAIHiB,EAAY,cAAC,EAAD,IAAaE,M,MCjFvBgB,MARf,WACE,OACE,qBAAK7C,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25f8f94f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Result(props) {\r\n\r\n    let totalAmount = Number(props.amount) + Number(props.tip);\r\n    let amountPerPerson = totalAmount / Number(props.people);\r\n\r\n\r\n    return (\r\n        <div>\r\n            Total Amount: {totalAmount}<br></br><hr></hr>\r\n            Each Person Owes: {amountPerPerson}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles, Button } from '@material-ui/core';\r\nimport Loader from './Loader'\r\nimport Result from './Result';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: 'red',\r\n        color: props => props.color,\r\n    },\r\n    outerDiv: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        height: '80vh',\r\n    },\r\n    input: {\r\n        margin: '0px 10px'\r\n    },\r\n    form: {\r\n        // height: '20vh',\r\n    }\r\n\r\n});\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [amount, setAmount] = useState(0);\r\n    const [people, setPeople] = useState(0);\r\n    const [tip, setTip] = useState(0);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [isLoading, setisLoading] = useState(false);\r\n    const [result, setresult] = useState(null)\r\n\r\n    const Calculate = (amount, people) => {\r\n        setisLoading(true)\r\n        setresult(<Result\r\n            amount={amount}\r\n            tip={tip}\r\n            people={people} />)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setisLoading(false)\r\n        }, 2000);\r\n    }, [isLoading])\r\n\r\n    useEffect(() => {\r\n        if (people > 1 && amount > 1) {\r\n            setDisabled(false)\r\n        } else {\r\n            setDisabled(true)\r\n        }\r\n    }, [amount, people]);\r\n\r\n    return (\r\n        <div className={classes.outerDiv}>\r\n            <h1>Tip Calculator</h1>\r\n            <form className={classes.form}>\r\n                <TextField\r\n                    id=\"amount\"\r\n                    type=\"number\"\r\n                    label=\"Bill Amount\"\r\n                    value={amount}\r\n                    className={classes.input}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                <TextField\r\n                    id=\"people\"\r\n                    type=\"number\"\r\n                    className={classes.input}\r\n                    label=\"Number of People\"\r\n                    value={people}\r\n                    onChange={(e) => setPeople(e.target.value)}\r\n\r\n                />\r\n                <TextField\r\n                    id=\"tip\"\r\n                    className={classes.input}\r\n                    label=\"Tip Amount\"\r\n                    value={tip}\r\n                    onChange={(e) => { setTip(e.target.value) }}\r\n\r\n                />\r\n                <Button disabled={disabled} variant=\"contained\" color=\"primary\" onClick={() => Calculate(amount, people)}>\r\n                    Calculate\r\n            </Button>\r\n            </form>\r\n            {isLoading ? <Loader /> : result}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import Form from '../components/Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './cockpit/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}